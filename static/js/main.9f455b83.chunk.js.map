{"version":3,"sources":["Theme.js","appbar/appbar.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","createTheme","palette","primary","main","contrastText","secondary","success","green","error","red","A400","background","default","CustomAppBar","Box","sx","flexGrow","AppBar","position","Toolbar","Grid","container","direction","justifyContent","alignItems","IconButton","color","Typography","variant","component","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGaA,EAAaC,YAAY,CAClCC,QAAS,CACLC,QAAS,CACLC,KAAM,UACNC,aAAc,QAElBC,UAAW,CACPF,KAAM,WAEVG,QAAS,CACLH,KAAMI,IAAM,MAEhBC,MAAO,CACHL,KAAMM,IAAIC,MAEdC,WAAY,CACRC,QAAS,W,GAKIZ,YAAY,CACjCC,QAAS,CACLC,QAAS,CACLC,KAAM,UACNC,aAAc,QAElBC,UAAW,CACPF,KAAM,WAEVG,QAAS,CACLH,KAAMI,IAAM,MAEhBC,MAAO,CACHL,KAAMM,IAAIC,MAEdC,WAAY,CACRC,QAAS,c,oFC7BN,SAASC,IACpB,OACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,GAApB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,WAJf,UAMI,cAACC,EAAA,EAAD,CACIC,MAAM,UADV,SAGI,cAACC,EAAA,EAAD,CACIC,QAAQ,KACRC,UAAU,MACVd,GAAI,CAACC,SAAU,GAHnB,yBAQJ,cAACS,EAAA,EAAD,CACIC,MAAM,UADV,SAIoD,cAAC,IAAD,eCxB7DI,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAeC,MAAOjC,EAAtB,SACE,cAAC,EAAD,OCISkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f455b83.chunk.js","sourcesContent":["import {green, red} from '@material-ui/core/colors';\nimport {createTheme} from \"@mui/material\";\n\nexport const lightTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        success: {\n            main: green['800']\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport const darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        success: {\n            main: green['800']\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#2e2b2b',\n        },\n    },\n});\n\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport BrightModeIcon from '@mui/icons-material/Brightness4';\nimport {Grid, IconButton} from \"@mui/material\";\n\nvar mode = \"lightmode\"\n\nexport default function CustomAppBar() {\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"baseline\"\n                    >\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            <Typography\n                                variant=\"h6\"\n                                component=\"div\"\n                                sx={{flexGrow: 1}}\n                            >\n                                PrashantB\n                            </Typography>\n                        </IconButton>\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            {\n                                (mode === \"darkmode\") ? <BrightModeIcon/> : <DarkModeIcon/>\n                            }\n                        </IconButton>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n","import './App.css';\nimport {ThemeProvider} from \"@mui/material\";\nimport {lightTheme} from \"./Theme\"\nimport AppBar from \"./appbar/appbar\"\n\nfunction App() {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <AppBar/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}