{"version":3,"sources":["Theme.js","constants.js","config.js","component/appbar/appbar.js","component/appbar/hooks/changeTheme.js","component/profile/profile.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","createTheme","palette","primary","main","contrastText","secondary","success","green","error","red","A400","background","default","LIGHT_THEME","DARK_THEME","cfg","CustomAppBar","useState","theme","setTheme","toggleTheme","changeTheme","Box","sx","flexGrow","AppBar","position","Toolbar","Grid","container","direction","justifyContent","alignItems","IconButton","color","Typography","fontWeight","variant","name","onClick","Profile","width","margin","border","src","imageURL","alt","imageAltURL","socials","github","email","facebook","youtube","instagram","linkedin","fontSize","description","map","v","fontStyle","App","Helmet","title","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c79e08cf.chunk.js","sourcesContent":["import {green, red} from '@material-ui/core/colors';\nimport {createTheme} from \"@mui/material\";\n\nexport const lightTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        success: {\n            main: green['800']\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport const darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#198534',\n        },\n        success: {\n            main: green['800']\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#2eb',\n        },\n    },\n});\n\n","export const LIGHT_THEME = \"light theme\"\nexport const DARK_THEME = \"dark theme\"","const cfg = {\n  \"title\": \"Prashant's Wiki\", //title of the window tab\n  \"name\": \"PrashantBedi\", //name of website\n  \"imageURL\": \"https://lh3.googleusercontent.com/aAFI9zhqGDdQaOcgprF5uZYRdYySy8lJH\" +\n      \"HwtUQx_X5GmgEforc9WFlNzH4qLufI9cw--PV3myeSSF2mPZpuEja6NcDpnFoa2XG1E5yHpb15I2\" +\n      \"qscg6gUteneqBxcKbX-z4pcp0Msbtn5sC2YqDgHQOsrs5OLyeDanD8Ma8Oxxa7ItXUJfzR4JJIny38Kqu8xwN\" +\n      \"3TfE6pgbiDr6klUCmJfVYFjtX6I5lrxEZZcAlaFnzFYbJixKj-bXoGxbqAgUJ7vbtHdQp_YgqHc8Nt6eiZoZl_A2EW\" +\n      \"5M1viTlLkCNih_BX-ooEBrY-et88DCl2R_BEO8QDnkDYIGYiIjxI3JZ-XRV6HNYPUi0_mbjYBQwxZ1ANM9QkxGbT\" +\n      \"veNJeTxkbf3dHQRJpjnyPNsFRR-ZSn37fvOoOGK8dDsuTlpMTF86kFeCfFf1a0__oi_Q_6sDiYT6lPpsSbYRbRVwsBXqTUld0\" +\n      \"b0BxwZ3EGsJrnBF5xoP7Z1s7ZSUSE0WLY4Uf1fl1oB9z1Fqu75bfG_cLzAZk8PW1QN1A0y2UqM5KZlWBNCYvaGeMYjtH6o\" +\n      \"txwJgfQKOqAtrpcO10wCHhUaMPhomgOmRNSJdoT_Z7zK4vkL0g2CfwLfhapPHU3TkXbUrrjF8dvXKjz-xzWxhCiFgg2fOKgpDtT\" +\n      \"0PwZ4_exgC51hoHk0H97H_RC4jdO3yvX5qs0_lhwwdbu-mpmTTdS-tMSt895R0-qf5=w2368-h1578-no?authuser=0\", //your image url\n  \"imageAltURL\": \"https://as1.ftcdn.net/v2/jpg/03/46/83/96/1000_F_346839683_\" +\n       \"6nAPzbhpSkIpb8pmAwufkC7c5eD7wYws.jpg\", //alternate if the above url is not available\n  \"description\": [ //description about you\n      \"Hey everyone!\",\n      \"I am a software developer interested in physics, gaming and tech. \" +\n      \"I like to explore the depths of universe and how it works. A big fan of Nikola Tesla and the Einsteins \" +\n      \"'Theory of Relativity'\"\n  ], // each element in array will be on new line\n  \"socials\": { //keep value \"\" to hide a social from ui\n    \"github\": \"www.github.com/Prashant2411\",\n    \"linkedin\": \"https://www.linkedin.com/in/prashant-bedi-620738178\",\n    \"instagram\": \"https://www.instagram.com/__god.of.mischief___/\",\n    \"email\": \"prashantbedi241197@gmail.com\",\n    \"youtube\": \"www.youtube.com/channel/UCjoExLiPcSXkNYAtpe-OBdg\",\n    \"facebook\": \"\" //hide facebook from ui\n  }\n}\n\nexport default cfg\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport BrightModeIcon from '@mui/icons-material/Brightness4';\nimport {Grid, IconButton} from \"@mui/material\";\nimport {DARK_THEME} from \"../../constants\";\nimport cfg from \"../../config\";\nimport changeTheme from \"./hooks/changeTheme\";\n\nconst CustomAppBar = () => {\n    const {theme, toggleTheme} = changeTheme()\n\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"baseline\"\n                    >\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            <Typography\n                                fontWeight=\"bold\"\n                                variant=\"h5\"\n                                sx={{flexGrow: 1}}\n                            >\n                                {cfg.name}\n                            </Typography>\n                        </IconButton>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={toggleTheme}\n                        >\n                            {\n                                (theme === DARK_THEME) ? <BrightModeIcon/> : <DarkModeIcon/>\n                            }\n                        </IconButton>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n\nexport default CustomAppBar\n","import {useState} from \"react\";\nimport {DARK_THEME, LIGHT_THEME} from \"../../../constants\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const [theme, setTheme] = useState(LIGHT_THEME)\n\n    const toggleTheme = () => {\n        (theme === LIGHT_THEME) ? setTheme(DARK_THEME) : setTheme(LIGHT_THEME)\n    };\n\n    return {\n        theme: theme,\n        toggleTheme: toggleTheme\n    }\n}","import {Box} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport {Grid, IconButton} from \"@material-ui/core\";\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport EmailIcon from '@mui/icons-material/AlternateEmail';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport cfg from \"../../config\"\n\nconst Profile = () => {\n    return (\n        <Box\n            width=\"30%\"\n            margin=\"3% 0 0 0\"\n        >\n            <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <img\n                    border=\"4%\"\n                    width=\"80%\"\n                    src={cfg.imageURL}\n                    alt={cfg.imageAltURL}\n                />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    {\n                        cfg.socials.github !== \"\" ?\n                            <IconButton>\n                                <GitHubIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                            : \"\"\n                    }{\n                        cfg.socials.email !== \"\" ?\n                            <IconButton>\n                                <EmailIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                        : \"\"\n                    }{\n                        cfg.socials.facebook !== \"\" ?\n                            <IconButton>\n                                <FacebookIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                        : \"\"\n                    }{\n                        cfg.socials.youtube !== \"\" ?\n                            <IconButton>\n                                <YouTubeIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                        : \"\"\n                    }{\n                        cfg.socials.instagram !== \"\" ?\n                            <IconButton>\n                                <InstagramIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                        : \"\"\n                    }{\n                        cfg.socials.linkedin !== \"\" ?\n                            <IconButton>\n                                <LinkedInIcon\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                        : \"\"\n                    }\n                </Grid>\n                <Typography margin=\"3% 7%\" fontSize=\"100%\" fontWeight=\"Italic\" color='inherit'>\n                    {\n                        cfg.description\n                            .map(\n                                (v) =>\n                                    <fragment>\n                                        {v}\n                                        <br/>\n                                    </fragment>\n                            )\n                    }\n                </Typography>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    <IconButton>\n                        <Typography fontSize=\"80%\" fontWeight=\"Bold\" color='primary'>\n                            Home\n                        </Typography>\n                    </IconButton>\n                    <IconButton>\n                        <Typography fontSize=\"80%\" fontWeight=\"Bold\" color='primary'>\n                            Blogs\n                        </Typography>\n                    </IconButton>\n                    <IconButton>\n                        <Typography fontSize=\"80%\" fontWeight=\"Bold\" color='primary'>\n                            Project\n                        </Typography>\n                    </IconButton>\n                    <IconButton>\n                        <Typography fontSize=\"80%\" fontWeight=\"Bold\" color='primary'>\n                            Resume\n                        </Typography>\n                    </IconButton>\n                    <IconButton>\n                        <Typography fontSize=\"80%\" fontWeight=\"Bold\" color='primary'>\n                            About\n                        </Typography>\n                    </IconButton>\n                </Grid>\n                <Typography\n                    fontSize=\"50%\"\n                    fontStyle=\"italic\"\n                >\n                    Designed and Build by Prashant Bedi\n                </Typography>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default Profile\n","import './App.css';\nimport {ThemeProvider} from \"@mui/material\";\nimport {lightTheme} from \"./Theme\"\nimport AppBar from \"./component/appbar/appbar\"\nimport Profile from \"./component/profile/profile\";\nimport {Grid} from \"@material-ui/core\";\nimport {Helmet} from \"react-helmet\";\nimport cfg from \"./config\";\n\nfunction App() {\n    return (\n        <fragment>\n            <Helmet>\n                <title>{cfg.title}</title>\n            </Helmet>\n            <ThemeProvider theme={lightTheme}>\n                <AppBar/>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"space-around\"\n                    alignItems=\"center\"\n                >\n                    <Profile/>\n                </Grid>\n            </ThemeProvider>\n        </fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}